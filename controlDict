/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.7.0                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "system";
    object      controlDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

application     pimpleFoam;

startFrom       latestTime;

startTime       0;

stopAt          endTime;

endTime         155;

deltaT          5e-10;

writeControl    adjustableRunTime;

writeInterval   1e-8;

purgeWrite      0;

writeFormat     binary;

writePrecision   8;

writeCompression off;

timeFormat      general;

timePrecision   10;

runTimeModifiable true;

adjustTimeStep  yes;

maxCo           0.8; 


functions
{
  vol-averaged-velocity
  {
    type volFieldValue;
    libs ("libfieldFunctionObjects.so");

    log true;

    writeControl adjustableRunTime;
    writeInterval 1e-9;
    writeFields false;

    regionType cellZone;
    name porous-zone;
	operation volAverage;

    fields
    (
      U
    );
  }

	pressure-delta
  {
    type fieldValueDelta;
    libs ("libfieldFunctionObjects.so");
    operation subtract;

    writeControl adjustableRunTime;
    writeInterval 1e-9;
    writeFields false;

    region1
    {
      type surfaceFieldValue;
      libs ("libfieldFunctionObjects.so");

      log true;

      writeControl adjustableRunTime;
      writeInterval 1e-9;
      writeFields false;

      regionType sampledSurface;
      name porous-zone-inlet;
      sampledSurfaceDict
      {
        type plane;
        planeType pointAndNormal;
        pointAndNormalDict
        {
          point (4.65038E-06 0 0);
          normal (1 0 0);
        }
      }

      operation areaAverage;

      fields
      (
        p
      );
    }

    region2
    {
      type surfaceFieldValue;
      libs ("libfieldFunctionObjects.so");

      log true;

      writeControl adjustableRunTime;
      writeInterval 1e-9;
      writeFields false;

      regionType sampledSurface;
      name porous-zone-outlet;
      sampledSurfaceDict
      {
        type plane;
        planeType pointAndNormal;
        pointAndNormalDict
        {
          point (6.99546E-06 0 0);
          normal (1 0 0);
        }
      }

      operation areaAverage;

      fields
      (
        p
      );
    }
  }
}


